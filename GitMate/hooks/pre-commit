#!/bin/bash

# Get the directory of the pre-commit script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# Set the point of comparison against which the changes in the working directory will be evaluated 
if git rev-parse --verify HEAD >/dev/null 2>&1
then
    # The current commit is not the initial commit
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
 # Note that the use of brackets around a tr range is ok here, (it's
 # even required, for portability to Solaris 10's /usr/bin/tr), since
 # the square bracket bytes happen to fall in the designated range.
 test $(git diff --cached --name-only --diff-filter=A -z $against |
   LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
 cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
 exit 1
fi

# Get the list of files that are being committed
files=$(git diff --cached --name-only --diff-filter=ACM "$against")

################################################################################
################################################################################
################################################################################

# List of pre-commit hooks to run
source "$SCRIPT_DIR/php/forbidden_regex.sh"
source "$SCRIPT_DIR/php/code_sniffer.sh"

################################################################################
################################################################################
################################################################################

# If the script reaches here, it means the commit is allowed
exit 0